# -*- coding: utf-8 -*-
"""arithmetic-formatter.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fPLyzKa9RjVElB2OzQD2FcGSRGFguOfN
"""

def arithmetic_arranger(lst,val=False):
  # checking is there more than 5 operations
  if len(lst)>5:
    print('Error: Too many problems.')
    return lst
  s1=[]
  s2=[]
  op=[]

  for oper in lst:
    # getting first operand
    s1.append(oper.split()[0])
    #  getting operator
    s2.append(oper.split()[2])
    # getting second operand
    op.append(oper.split()[1])

  # checking is there are operators other than + or -
  if '*' in op or '/' in op:
    print('operators must be + or -')
    return lst

  # checking is there any character other than digits in operands
  if not all(map(lambda x:x.isdigit(),s1)) or not all(map(lambda x:x.isdigit(),s2)):
    print('Error: Numbers must only contain digits.')
    return lst

  # checking is there any operands which having more than 4 digits
  if check(s1)==1 or check(s2)==1:
    print('Error: Numbers cannot be more than four digits')
    return lst

  # making lengths of both operands equal just for good format
  for i in range(len(op)):
    if len(s1[i])>len(s2[i]):
      s2[i]=' '*(len(s1[i])-len(s2[i]))+s2[i]
    elif len(s1[i])<len(s2[i]):
      s1[i]=' '*(len(s2[i])-len(s1[i]))+s1[i]

  # calculating answer for all the operations
  ans = calc(s1,s2,op)

  for i in range(len(op)):
    print(' ',s1[i],end='    ')
  print()
  for i in range(len(op)):
    print(op[i],s2[i],end='    ')
  print()
  for i in ans:
    print('-'*(len(i)+2),end='    ')
  print()
  if val:
    for ans in ans:
      print(' ',ans,end='    ')

# function to check whether of operands
def check(temp):
  for lst in temp:
    if len(lst)>4:
      return 1
  return 0

# function to calculate
def calc(a1,a2,op):
  ans=[]
  for i in range(len(op)):
    if op[i]=='+':
      ans.append(str(int(a1[i])+int(a2[i])))
    elif op[i]=='-':
      ans.append(str(int(a1[i])-int(a2[i])))
  return ans